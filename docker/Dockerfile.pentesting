# Penetration Testing Environment for ARM64
FROM k3s-jupyter-base:latest

USER root

# Install pentesting system packages
RUN apt-get update && apt-get install -y \
    # Network tools
    nmap \
    masscan \
    netcat-traditional \
    socat \
    proxychains4 \
    # Web tools
    nikto \
    dirb \
    gobuster \
    wfuzz \
    # Exploitation
    metasploit-framework \
    # Password tools
    john \
    hashcat \
    hydra \
    # Network analysis
    tcpdump \
    wireshark-common \
    ettercap-common \
    # Database tools
    sqlmap \
    # SSL/TLS
    sslscan \
    sslyze \
    # Additional utilities
    curl \
    wget \
    git \
    vim \
    tmux \
    # Development
    gcc \
    g++ \
    make \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install additional tools from source (ARM64 compatible)
RUN cd /opt && \
    # Install SecLists
    git clone https://github.com/danielmiessler/SecLists.git || true && \
    # Install PayloadsAllTheThings
    git clone https://github.com/swisskyrepo/PayloadsAllTheThings.git || true

# Switch to jupyter user
USER jupyter
WORKDIR /home/jupyter

# Copy environment file
COPY environments/pentesting/environment.yml /tmp/environment.yml

# Create conda environment
RUN conda env create -f /tmp/environment.yml && \
    conda clean --all -f -y && \
    rm /tmp/environment.yml

# Activate environment and install kernel
RUN /opt/conda/envs/jupyter-pentesting/bin/python -m ipykernel install \
    --user \
    --name pentesting \
    --display-name "Penetration Testing (ARM64)"

# Create notebook directories
RUN mkdir -p notebooks/pentesting/{recon,exploitation,post-exploitation,reports,scripts}

# Create tool directories
RUN mkdir -p /home/jupyter/tools/{wordlists,exploits,shells,scripts}

# Copy pentesting scripts if available
COPY environments/pentesting/scripts/* /home/jupyter/tools/scripts/ || true

# Set environment variables
ENV CONDA_DEFAULT_ENV=jupyter-pentesting
ENV PATH=/opt/conda/envs/jupyter-pentesting/bin:$PATH
ENV SECLISTS=/opt/SecLists
ENV PAYLOADS=/opt/PayloadsAllTheThings

# Configure proxychains
RUN echo "socks4 127.0.0.1 9050" >> /etc/proxychains4.conf

WORKDIR /home/jupyter/notebooks

CMD ["jupyter", "lab", "--ip=0.0.0.0", "--no-browser", "--allow-root"]